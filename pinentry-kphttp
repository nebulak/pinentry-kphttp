#!/usr/bin/env python3
import logging
import os
import sys
from sys import stdin
from keepasshttpc.protocol import (test_associate, associate,
                                   retrieve_credentials, get_all_logins)

enable_logging = False
logger = logging.getLogger('pinentry_kphttp')
logger.setLevel(logging.INFO)
fh = logging.FileHandler('debug.log')
fh.setLevel(logging.INFO)
logger.addHandler(fh)


def log(text):
    logger.info(text)


def reply_ok(text="" ):
    print('OK ' + text)
    try:
        sys.stdout.flush()
    except:
        pass


def reply_d(text=""):
    print("D " + text)
    try:
        sys.stdout.flush()
    except:
        pass
    print("OK")
    try:
        sys.stdout.flush()
    except:
        pass


def get_pin():
    if(test_associate() is False):
        associate()
    creds = retrieve_credentials("https://gnupg.org", triggerUnlock=True)
    info = ""
    for c in creds:
        info = c['Password']
    return info


def main():
    log("started")
    reply_ok("Your orders please")
    while 1 == 1:
        for line in sys.stdin:
            log(line)
            splits = line.split(' ', 1)
            cmd = splits.pop(0).strip()
            cmd = cmd.lower()
            cmd = cmd.rstrip('\n')

            if cmd == 'getpin':
                log('Recognized GETPIN')
                pw = get_pin()
                if pw != "":
                    log('Got Password: ' + pw)
                    reply_d(pw)
                    #reply_ok()
                else:
                    log('Unable to get password')
                    reply_ok("Pw not found")
            elif cmd == 'bye':
                log('CMD: ' + cmd)
                reply_ok("closing connection")
                return
            elif cmd == 'getinfo':
                log('CMD: ' + cmd)
                reply_d(str(os.getpid()))
            else:
                log('CMD: ' + cmd)
                reply_ok()



main()
